""" атрибуты экземпляра класса"""

class Car:
    model = "BMW"
    engine = 1.6

auto1 = Car()
auto2 = Car()

print(Car.__dict__)
print(auto1.model)          # выводится БМВ то есть атрибут получечнный от класса
print(auto1.engine)

print(auto1.__dict__)
print(auto2.__dict__)

auto1.seat = 4              # создали атрибут экземпляра класса
print(auto1.__dict__)       # проверили это

print(Car.__dict__)         # но у Класса этого атрибут ане появилось, он создался только для экземпляра класса
print(auto2.__dict__)       # но и не появилось у вторго экземпляра классса


auto1.model = "LADA"        # измениеи атрибут внутри экземляра
print(auto1.__dict__)
print(auto1.model)          # выводится ЛАДА так как атрибут полученный от класса был заменён на атрибут лично экземпляра

# при обращении к атрибуту экземпляра в первую очерендь он ищет внутри экземпляра, а только потом он начинает проверку внутри класса
# если создать атрибут внутри класса то он станет автоматически доступне всем экземплярам этого класса, но наоборот это не работает атрибут объекта класса - принадлежит только ему

Car.model = "LAMBORGINI"
print("Авто1 и его модель", auto1.model)          # занчение ЛАМБОРГИНИ атрибута модел не присвоилось для авто1 потому что у него есть свой атрибут модел
print("Авто2 и его модель", auto2.model)          # а вот для авто2 присвоился новое значение атрибута модел

del auto1.model                                 # удалили атрибут модел у авто1
print("Авто1 и его модель", auto1.model)        # мы удалили у авто1 его личный атрибут модел и теперь ему принадлежит атрибут модел от класса Кар
